openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/v1/auth/token/login/:
    post:
      operationId: auth_token_login_create
      description: Use this endpoint to obtain user authentication token.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
  /api/v1/auth/token/logout/:
    post:
      operationId: auth_token_logout_create
      description: Use this endpoint to logout user (remove user authentication token).
      tags:
      - auth
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/courses/:
    get:
      operationId: courses_list
      description: Курсы.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - courses
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCourseList'
          description: ''
    post:
      operationId: courses_create
      description: Курсы.
      tags:
      - courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateCourse'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCourse'
          description: ''
  /api/v1/courses/{course_id}/groups/:
    get:
      operationId: courses_groups_list
      description: Группы.
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - courses
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupList'
          description: ''
    post:
      operationId: courses_groups_create
      description: Группы.
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateGroup'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGroup'
          description: ''
  /api/v1/courses/{course_id}/groups/{id}/:
    get:
      operationId: courses_groups_retrieve
      description: Группы.
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Группа.
        required: true
      tags:
      - courses
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    put:
      operationId: courses_groups_update
      description: Группы.
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Группа.
        required: true
      tags:
      - courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateGroup'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGroup'
          description: ''
    patch:
      operationId: courses_groups_partial_update
      description: Группы.
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Группа.
        required: true
      tags:
      - courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCreateGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCreateGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCreateGroup'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGroup'
          description: ''
    delete:
      operationId: courses_groups_destroy
      description: Группы.
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Группа.
        required: true
      tags:
      - courses
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/courses/{course_id}/lessons/:
    get:
      operationId: courses_lessons_list
      description: Уроки.
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - courses
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessonList'
          description: ''
    post:
      operationId: courses_lessons_create
      description: Уроки.
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLesson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateLesson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateLesson'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLesson'
          description: ''
  /api/v1/courses/{course_id}/lessons/{id}/:
    get:
      operationId: courses_lessons_retrieve
      description: Уроки.
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Урок.
        required: true
      tags:
      - courses
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
          description: ''
    put:
      operationId: courses_lessons_update
      description: Уроки.
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Урок.
        required: true
      tags:
      - courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLesson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateLesson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateLesson'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLesson'
          description: ''
    patch:
      operationId: courses_lessons_partial_update
      description: Уроки.
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Урок.
        required: true
      tags:
      - courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCreateLesson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCreateLesson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCreateLesson'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLesson'
          description: ''
    delete:
      operationId: courses_lessons_destroy
      description: Уроки.
      parameters:
      - in: path
        name: course_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Урок.
        required: true
      tags:
      - courses
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/courses/{id}/:
    get:
      operationId: courses_retrieve
      description: Курсы.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - courses
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
    put:
      operationId: courses_update
      description: Курсы.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateCourse'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCourse'
          description: ''
    patch:
      operationId: courses_partial_update
      description: Курсы.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCreateCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCreateCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCreateCourse'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCourse'
          description: ''
    delete:
      operationId: courses_destroy
      description: Курсы.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - courses
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/courses/{id}/pay/:
    post:
      operationId: courses_pay_create
      description: Покупка доступа к курсу.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateCourse'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCourse'
          description: ''
  /api/v1/purchases/:
    get:
      operationId: purchases_list
      description: Покупки.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - purchases
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPurchaseList'
          description: ''
  /api/v1/purchases/{id}/:
    get:
      operationId: purchases_retrieve
      description: Покупки.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Покупка.
        required: true
      tags:
      - purchases
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
          description: ''
    delete:
      operationId: purchases_destroy
      description: Покупки.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Покупка.
        required: true
      tags:
      - purchases
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/users/:
    get:
      operationId: users_list
      description: Пользователи.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - users
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomUserList'
          description: ''
    post:
      operationId: users_create
      description: Пользователи.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
  /api/v1/users/{id}/:
    get:
      operationId: users_retrieve
      description: Пользователи.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пользователь.
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    put:
      operationId: users_update
      description: Пользователи.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пользователь.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    patch:
      operationId: users_partial_update
      description: Пользователи.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пользователь.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    delete:
      operationId: users_destroy
      description: Пользователи.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пользователь.
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/{id}/change_balance/:
    patch:
      operationId: users_change_balance_partial_update
      description: Пользователи.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пользователь.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomUser'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
components:
  schemas:
    Course:
      type: object
      description: Список курсов.
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: string
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 250
        description:
          type: string
          nullable: true
          title: Описание
          maxLength: 1000
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Стоимость
        lessons_count:
          type: integer
          readOnly: true
        lessons:
          type: array
          items:
            $ref: '#/components/schemas/MiniLesson'
          readOnly: true
        demand_course_percent:
          type: integer
          readOnly: true
        students_count:
          type: integer
          readOnly: true
        groups_filled_percent:
          type: number
          format: double
          readOnly: true
        is_active:
          type: boolean
          title: Доступность
      required:
      - author
      - demand_course_percent
      - groups_filled_percent
      - id
      - is_active
      - lessons
      - lessons_count
      - price
      - students_count
      - title
    CreateCourse:
      type: object
      description: Создание курсов.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 250
        description:
          type: string
          nullable: true
          title: Описание
          maxLength: 1000
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Стоимость
        is_active:
          type: boolean
          title: Доступность
      required:
      - id
      - is_active
      - price
      - title
    CreateGroup:
      type: object
      description: Создание групп.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 250
      required:
      - id
      - title
    CreateLesson:
      type: object
      description: Создание уроков.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 250
        link:
          type: string
          format: uri
          title: Ссылка
          maxLength: 250
      required:
      - id
      - link
      - title
    CustomUser:
      type: object
      description: Пользователи.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          title: Уникальный юзернейм
          description: Обязательно для заполнения. Не более 150 символов.Только буквы,
            цифры и @/./+/-/_
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Адрес электронной почты
          maxLength: 254
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        bio:
          type: string
          nullable: true
          title: О себе
        balance_amount:
          type: integer
          readOnly: true
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          default: student
          title: Ролевая принадлежность
        password:
          type: string
          writeOnly: true
          title: Пароль
      required:
      - balance_amount
      - id
      - password
      - username
    Group:
      type: object
      description: Список групп.
      properties:
        id:
          type: integer
          readOnly: true
        course:
          type: string
          readOnly: true
        users:
          type: array
          items:
            type: string
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 250
      required:
      - course
      - id
      - title
      - users
    Lesson:
      type: object
      description: Список уроков.
      properties:
        id:
          type: integer
          readOnly: true
        course:
          type: string
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 250
        link:
          type: string
          format: uri
          title: Ссылка
          maxLength: 250
      required:
      - course
      - id
      - link
      - title
    MiniLesson:
      type: object
      description: Список названий уроков для списка курсов.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 250
      required:
      - id
      - title
    PaginatedCourseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Course'
    PaginatedCustomUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomUser'
    PaginatedGroupList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    PaginatedLessonList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Lesson'
    PaginatedPurchaseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Purchase'
    PatchedCreateCourse:
      type: object
      description: Создание курсов.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 250
        description:
          type: string
          nullable: true
          title: Описание
          maxLength: 1000
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Стоимость
        is_active:
          type: boolean
          title: Доступность
    PatchedCreateGroup:
      type: object
      description: Создание групп.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 250
    PatchedCreateLesson:
      type: object
      description: Создание уроков.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 250
        link:
          type: string
          format: uri
          title: Ссылка
          maxLength: 250
    PatchedCustomUser:
      type: object
      description: Пользователи.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          title: Уникальный юзернейм
          description: Обязательно для заполнения. Не более 150 символов.Только буквы,
            цифры и @/./+/-/_
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Адрес электронной почты
          maxLength: 254
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        bio:
          type: string
          nullable: true
          title: О себе
        balance_amount:
          type: integer
          readOnly: true
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          default: student
          title: Ролевая принадлежность
        password:
          type: string
          writeOnly: true
          title: Пароль
    Purchase:
      type: object
      description: Покупки.
      properties:
        user:
          type: string
          readOnly: true
        course:
          type: string
          readOnly: true
        purchased_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - course
      - purchased_at
      - user
    RoleEnum:
      enum:
      - student
      - teacher
      type: string
      description: |-
        * `student` - Студент
        * `teacher` - Преподаватель
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
